name: Test, Build and Deploy Docker Image

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

permissions:
  contents: read

jobs:
  test:
    name: Test Python Application
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run unit tests
      run: |
        coverage run -m unittest discover -s tests     
        coverage report
        coverage html

  build:
    name: Build and Push Docker Image to Render
    runs-on: ubuntu-latest
    needs: test  # <-- ensures this job only runs if 'test' succeeds

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/rootedbudget .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/rootedbudget

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build  # This job will run only after the Docker image is pushed successfully

    steps:
    - name: Trigger Render deployment (Post build)
      run: |
        curl -X POST https://api.render.com/v1/services/srv-d0cgpmali9vc73c6g48g/deploys \
        -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
        -H "Content-Type: application/json" \
        -d '{"branch":"main"}'
